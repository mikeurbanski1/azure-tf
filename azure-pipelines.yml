# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  paths:
    include:
      - terraform/*

pool:
  vmImage: 'ubuntu-latest'

steps:
# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.8'
#   displayName: 'Install Python 3.8'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
  displayName: 'Install Terraform'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: 'terraform'
    backendType: 'azurerm'
    backendServiceArm: 'tf-service-connection'
    backendAzureRmResourceGroupName: 'tfstate'
    backendAzureRmStorageAccountName: 'bcazrtfstatestorage'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'azure_tf.tfstate'
  displayName: 'terraform init'
- task: TerraformCLI@0
  inputs:
    command: 'validate'
    provider: 'azurerm'
    workingDirectory: 'terraform'
- task: TerraformCLI@0
  inputs:
    command: 'plan'
    provider: 'azurerm'
    workingDirectory: 'terraform'
    environmentServiceNameAzureRM: 'tf-service-connection'
  displayName: 'terraform plan'
# - script: pip install bridgecrew
#   displayName: 'Install the Bridgecrew CLI'
# - script: bridgecrew -d terraform
#   displayName: 'Scan with Bridgecrew'
# - script: echo 'The scan was successful'
#   displayName: 'Dummy success task'
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

